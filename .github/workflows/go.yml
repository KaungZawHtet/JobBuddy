name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    environment: JobBuddyEnv

    env:
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}

    steps:
    - uses: actions/checkout@v4

    - name: Create .env file
      run: |
        echo "DATABASE_NAME=${DATABASE_NAME}" >> .env
        echo "DATABASE_USERNAME=${DATABASE_USERNAME}" >> .env
        echo "DATABASE_PASSWORD=${DATABASE_PASSWORD}" >> .env
        echo "DATABASE_HOST=${DATABASE_HOST}" >> .env
        echo "DATABASE_PORT=${DATABASE_PORT}" >> .env
        echo "ENVIRONMENT=${ENVIRONMENT}" >> .env

    - name: Display .env file
      run: cat .env

    - name: Install PostgreSQL
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql postgresql-contrib

    - name: Start PostgreSQL service
      run: sudo service postgresql start

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready --host=$DATABASE_HOST --port=$DATABASE_PORT --username=$DATABASE_USERNAME; do
          sleep 1
        done

    - name: Set up PostgreSQL database
      run: |
        sudo -u postgres psql -c "CREATE DATABASE $DATABASE_NAME;"
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DATABASE_NAME TO $DATABASE_USERNAME;"
        sudo -u postgres psql -c "ALTER USER \"$DATABASE_USERNAME\" WITH PASSWORD '$DATABASE_PASSWORD';"


    - name: Install dependencies
      run: go mod download

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.3'

    - name: Build
      run: go build -v ./...

    - name: Migrate
      run: go run ./cmd/migration/

    - name: Test
      run: go test -v ./tests/...

    - name: Stop PostgreSQL service
      run: sudo service postgresql stop
